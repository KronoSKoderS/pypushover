{"name":"py_pushover","tagline":"Python bindings to the Push Over API.  Supports both python 2 and 3.  ","body":"# py_pushover\r\nPython bindings to the Push Over API.  Supports both python 2 and 3.  \r\n\r\n# Usage\r\n    \r\nBasic Usage:\r\n-----------\r\n    import py_pushover as py_po\r\n    pm = py_po.PushManager('<Token>', '<Group_Key>')\r\n    pm.push_notification('Message Body', title=\"Title\")\r\n    \r\nChanging Sounds:\r\n----------------\r\n    # Send notification with the Long Pushover Echo notification sound\r\n    pm.push_notification('Title', 'Message Body', sound=py_po.Sounds.Long_Pushover_Echo)\r\n    \r\nSelect Priority:\r\n----------------\r\n    # Send notification with the Lowest Priority\r\n    pm.push_notification('Title', 'Message Body', priority=py_po.Priority.Lowest)\r\n    pm.push_notification('Title', 'Message Body', priority=py_po.Emergency, retry=30, expire=3600)\r\n\r\nCheck Receipt:\r\n--------------\r\n    # Can check that last responses receipt (Note push notificiaton with a priority of Emergency is required first)\r\n    pm.check_receipt()\r\n    # Can check a custom receipt\r\n    pm.check_receipt('<receipt token>')\r\n\r\n# Future Work:\r\n* <strike>Emergency Priority confirmation and additional support</strike>\r\n* Asynchronous method for `push_notification`\r\n* <strike>User/Group Verification API</strike>\r\n* <strike>Receipt API</strike>\r\n* Subscriptions API\r\n* Group Management API\r\n* Licensing API\r\n* BETA Open Client API","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}